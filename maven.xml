<project xmlns:j="jelly:core"
   xmlns:maven="jelly:maven"
   xmlns:ant="jelly:ant"
  >


   <!--
    | Generate About.java before compiling
    -->
   <preGoal name="war:init">
		<copy file="${pom.build.sourceDirectory}/org/zilverline/util/About.template" tofile="${pom.build.sourceDirectory}/org/zilverline/util/About.java" overwrite="true"/>
		<tstamp>
		    <format property="BUILD_DATE" pattern="dd-MM-yyyy HH:mm:ss" locale="en"/>
  		</tstamp>		
		<ant:echo>Setting Build date to: ${BUILD_DATE} and version ${pom.currentVersion}</ant:echo>  
		<replace file="${pom.build.sourceDirectory}/org/zilverline/util/About.java"
			token="@BUILD_DATE@"
			value="${BUILD_DATE}"/>
		<replace file="${pom.build.sourceDirectory}/org/zilverline/util/About.java"
			token="@AUTHOR@"
			value="${author}"/>
		<replace file="${pom.build.sourceDirectory}/org/zilverline/util/About.java"
			token="@COPYRIGHT@"
			value="${copyright}"/>
		<replace file="${pom.build.sourceDirectory}/org/zilverline/util/About.java"
			token="@PRODUCTNAME@"
			value="${pom.name}"/>
		<replace file="${pom.build.sourceDirectory}/org/zilverline/util/About.java"
			token="@VERSION@"
			value="${pom.currentVersion}"/>
   </preGoal>

   <postGoal name="site">
		<copy file="docs/maven-base.css" todir="${maven.build.dir}/docs/style" overwrite="true"/>
		<copy file="docs/maven-theme.css" todir="${maven.build.dir}/docs/style" overwrite="true"/>
   </postGoal>

    <!-- Set current version in Spring config -->
   <preGoal name="war:webapp">
     <ant:replace file="${maven.build.dir}/zilverline/WEB-INF/web.xml" token="@zilverline.version" value="${pom.currentVersion}"/>
   </preGoal>

   <goal name="fast-war">
  	 <j:set var="maven.test.skip" value="true"/>
     <attainGoal name="war"/>
   </goal>

   <goal name="fast-reload">
  	 <j:set var="maven.test.skip" value="true"/>
     <attainGoal name="tomcat:reload"/>
   </goal>
  
   <postGoal name="war:init">
		<copy todir="${maven.build.dir}/zilverline/WEB-INF/db" overwrite="true">
			<fileset dir="db"/>
		</copy>
   </postGoal>

   <preGoal name="test:test-resources">
		<copy todir="${maven.build.dir}/db" overwrite="true">
			<fileset dir="db"/>
		</copy>
   </preGoal>

   <!--
    | Make JUNIT tests run with clover instrumentation, 
    | so we don't have to run unit tests again
    | see: maven.clover.execute.during.report=false
    -->
   <preGoal name="junit-report:report">
		<attainGoal name="clover:on"/>
   </preGoal>
   <postGoal name="clover:report">
		<attainGoal name="clover:off"/>
   </postGoal>

</project>
